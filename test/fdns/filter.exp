#!/usr/bin/expect -f
# This file is part of FDNS project
# Copyright (C) 2019-2021 FDNS Authors
# License GPL v2

set timeout 10
spawn $env(SHELL)
match_max 100000

send -- "pkill fdns --resolvers=1\r"
sleep 2

send -- "fdns\r"
set server_id $spawn_id
expect {
	timeout {puts "TESTING ERROR 0\n";exit}
	"fdns starting"
}
expect {
	timeout {puts "TESTING ERROR 0.1\n";exit}
	"SSL connection opened"
}
sleep 1


spawn $env(SHELL)
send -- "firejail --dns=127.1.1.1 ping -c 3 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 dig +time=2 +tries=1 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=NS -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=CNAME -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=SOA -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=NULL --retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=MX -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=TXT -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=KEY -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=LOC -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=SRV -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=ANY -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=URI -retry=1 -timeout=2 doubleclick.net\r"
sleep 2
send -- "firejail --dns=127.1.1.1 nslookup -query=PRIVATE -retry=1 -timeout=2 doubleclick.net\r"
sleep 2

set ping_id $spawn_id

spawn $env(SHELL)
set monitor_id $spawn_id
send -- "fdns --monitor\r"
expect {
	timeout {puts "TESTING ERROR 1\n";exit}
	"doubleclick.net, dropped"
}
expect {
	timeout {puts "TESTING ERROR 2\n";exit}
	"invalid DNS section counts"
}
expect {
	timeout {puts "TESTING ERROR 3\n";exit}
	"Error LANrx: RR type"
}
expect {
	timeout {puts "TESTING ERROR 4\n";exit}
	"Error LANrx: RR type"
}
expect {
	timeout {puts "TESTING ERROR 5\n";exit}
	"Error LANrx: RR type"
}
after 100

set spawn_id $ping_id
send -- "pkill fdns\r"

after 100
puts "\nall done\n"

